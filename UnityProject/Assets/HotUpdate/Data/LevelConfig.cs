
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class LevelConfig : Luban.BeanBase
{
    public LevelConfig(JSONNode _buf) 
    {
        { if(!_buf["Id"].IsNumber) { throw new SerializationException(); }  Id = _buf["Id"]; }
        { if(!_buf["HardMode"].IsNumber) { throw new SerializationException(); }  HardMode = _buf["HardMode"]; }
        { if(!_buf["FallInterval"].IsNumber) { throw new SerializationException(); }  FallInterval = _buf["FallInterval"]; }
        { if(!_buf["ContainerColorRelation"].IsString) { throw new SerializationException(); }  ContainerColorRelation = _buf["ContainerColorRelation"]; }
        { if(!_buf["ContainerUnlockAndAmount"].IsString) { throw new SerializationException(); }  ContainerUnlockAndAmount = _buf["ContainerUnlockAndAmount"]; }
        { if(!_buf["BoxCol"].IsNumber) { throw new SerializationException(); }  BoxCol = _buf["BoxCol"]; }
        { if(!_buf["BoxWeight"].IsString) { throw new SerializationException(); }  BoxWeight = _buf["BoxWeight"]; }
        { if(!_buf["BulletSegmentLength"].IsNumber) { throw new SerializationException(); }  BulletSegmentLength = _buf["BulletSegmentLength"]; }
        { if(!_buf["BoxSegmentLength"].IsNumber) { throw new SerializationException(); }  BoxSegmentLength = _buf["BoxSegmentLength"]; }
        { if(!_buf["BoxInitPSame"].IsNumber) { throw new SerializationException(); }  BoxInitPSame = _buf["BoxInitPSame"]; }
        { if(!_buf["BoxDeltaPSame"].IsNumber) { throw new SerializationException(); }  BoxDeltaPSame = _buf["BoxDeltaPSame"]; }
        { if(!_buf["BoxMaxPDiff"].IsNumber) { throw new SerializationException(); }  BoxMaxPDiff = _buf["BoxMaxPDiff"]; }
        { if(!_buf["WinCondition"].IsString) { throw new SerializationException(); }  WinCondition = _buf["WinCondition"]; }
        { if(!_buf["BrickAvgHp"].IsNumber) { throw new SerializationException(); }  BrickAvgHp = _buf["BrickAvgHp"]; }
        { if(!_buf["BrickPSame"].IsNumber) { throw new SerializationException(); }  BrickPSame = _buf["BrickPSame"]; }
        { if(!_buf["BrickAmount"].IsNumber) { throw new SerializationException(); }  BrickAmount = _buf["BrickAmount"]; }
        { if(!_buf["StartIndex"].IsNumber) { throw new SerializationException(); }  StartIndex = _buf["StartIndex"]; }
        { if(!_buf["EndIndex"].IsNumber) { throw new SerializationException(); }  EndIndex = _buf["EndIndex"]; }
        { if(!_buf["WindowSize"].IsNumber) { throw new SerializationException(); }  WindowSize = _buf["WindowSize"]; }
        { if(!_buf["BoxGeneratorInfo"].IsString) { throw new SerializationException(); }  BoxGeneratorInfo = _buf["BoxGeneratorInfo"]; }
        { if(!_buf["RandomBoxNum"].IsNumber) { throw new SerializationException(); }  RandomBoxNum = _buf["RandomBoxNum"]; }
        { if(!_buf["FailRate"].IsNumber) { throw new SerializationException(); }  FailRate = _buf["FailRate"]; }
        { if(!_buf["ProgresssRate"].IsNumber) { throw new SerializationException(); }  ProgresssRate = _buf["ProgresssRate"]; }
    }

    public static LevelConfig DeserializeLevelConfig(JSONNode _buf)
    {
        return new LevelConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 困难模式
    /// </summary>
    public readonly int HardMode;
    /// <summary>
    /// 限时模式下落间隔（毫秒）
    /// </summary>
    public readonly int FallInterval;
    /// <summary>
    /// 容器颜色对应关系
    /// </summary>
    public readonly string ContainerColorRelation;
    /// <summary>
    /// 容器-解锁-总数
    /// </summary>
    public readonly string ContainerUnlockAndAmount;
    /// <summary>
    /// 箱子列数
    /// </summary>
    public readonly int BoxCol;
    /// <summary>
    /// 箱子种类权重
    /// </summary>
    public readonly string BoxWeight;
    /// <summary>
    /// 每段小球数量
    /// </summary>
    public readonly int BulletSegmentLength;
    /// <summary>
    /// 每段盒子数量
    /// </summary>
    public readonly int BoxSegmentLength;
    /// <summary>
    /// 盒子P相同基础
    /// </summary>
    public readonly float BoxInitPSame;
    /// <summary>
    /// 盒子P相同变化
    /// </summary>
    public readonly float BoxDeltaPSame;
    /// <summary>
    /// 盒子MaxP难度修正
    /// </summary>
    public readonly float BoxMaxPDiff;
    /// <summary>
    /// 关卡目标
    /// </summary>
    public readonly string WinCondition;
    /// <summary>
    /// 砖块平均HP
    /// </summary>
    public readonly int BrickAvgHp;
    /// <summary>
    /// 砖块P相同
    /// </summary>
    public readonly float BrickPSame;
    /// <summary>
    /// 砖块总个数
    /// </summary>
    public readonly int BrickAmount;
    /// <summary>
    /// 开始砖块Id
    /// </summary>
    public readonly int StartIndex;
    /// <summary>
    /// 结束砖块Id
    /// </summary>
    public readonly int EndIndex;
    /// <summary>
    /// 滑动窗口大小
    /// </summary>
    public readonly int WindowSize;
    /// <summary>
    /// 盒子生成器
    /// </summary>
    public readonly string BoxGeneratorInfo;
    /// <summary>
    /// 盲盒个数
    /// </summary>
    public readonly int RandomBoxNum;
    /// <summary>
    /// 关卡失败率
    /// </summary>
    public readonly float FailRate;
    /// <summary>
    /// 关卡进度
    /// </summary>
    public readonly float ProgresssRate;
   
    public const int __ID__ = -1308229690;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "HardMode:" + HardMode + ","
        + "FallInterval:" + FallInterval + ","
        + "ContainerColorRelation:" + ContainerColorRelation + ","
        + "ContainerUnlockAndAmount:" + ContainerUnlockAndAmount + ","
        + "BoxCol:" + BoxCol + ","
        + "BoxWeight:" + BoxWeight + ","
        + "BulletSegmentLength:" + BulletSegmentLength + ","
        + "BoxSegmentLength:" + BoxSegmentLength + ","
        + "BoxInitPSame:" + BoxInitPSame + ","
        + "BoxDeltaPSame:" + BoxDeltaPSame + ","
        + "BoxMaxPDiff:" + BoxMaxPDiff + ","
        + "WinCondition:" + WinCondition + ","
        + "BrickAvgHp:" + BrickAvgHp + ","
        + "BrickPSame:" + BrickPSame + ","
        + "BrickAmount:" + BrickAmount + ","
        + "StartIndex:" + StartIndex + ","
        + "EndIndex:" + EndIndex + ","
        + "WindowSize:" + WindowSize + ","
        + "BoxGeneratorInfo:" + BoxGeneratorInfo + ","
        + "RandomBoxNum:" + RandomBoxNum + ","
        + "FailRate:" + FailRate + ","
        + "ProgresssRate:" + ProgresssRate + ","
        + "}";
    }
}

}

