
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class Language : Luban.BeanBase
{
    public Language(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["key"].IsString) { throw new SerializationException(); }  Key = _buf["key"]; }
        { if(!_buf["ChineseSimplified"].IsString) { throw new SerializationException(); }  ChineseSimplified = _buf["ChineseSimplified"]; }
        { if(!_buf["English"].IsString) { throw new SerializationException(); }  English = _buf["English"]; }
        { if(!_buf["Japanese"].IsString) { throw new SerializationException(); }  Japanese = _buf["Japanese"]; }
        { if(!_buf["French"].IsString) { throw new SerializationException(); }  French = _buf["French"]; }
        { if(!_buf["Russian"].IsString) { throw new SerializationException(); }  Russian = _buf["Russian"]; }
        { if(!_buf["ChineseTraditional"].IsString) { throw new SerializationException(); }  ChineseTraditional = _buf["ChineseTraditional"]; }
    }

    public static Language DeserializeLanguage(JSONNode _buf)
    {
        return new Language(_buf);
    }

    /// <summary>
    /// 序号
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 策划管理
    /// </summary>
    public readonly string Key;
    /// <summary>
    /// 简体中文
    /// </summary>
    public readonly string ChineseSimplified;
    /// <summary>
    /// 英语
    /// </summary>
    public readonly string English;
    /// <summary>
    /// 日语
    /// </summary>
    public readonly string Japanese;
    /// <summary>
    /// 法语
    /// </summary>
    public readonly string French;
    /// <summary>
    /// 俄语
    /// </summary>
    public readonly string Russian;
    /// <summary>
    /// 繁体中文
    /// </summary>
    public readonly string ChineseTraditional;
   
    public const int __ID__ = -1548945544;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "key:" + Key + ","
        + "ChineseSimplified:" + ChineseSimplified + ","
        + "English:" + English + ","
        + "Japanese:" + Japanese + ","
        + "French:" + French + ","
        + "Russian:" + Russian + ","
        + "ChineseTraditional:" + ChineseTraditional + ","
        + "}";
    }
}

}

